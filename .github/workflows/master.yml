name: Master
on:
  push:
    paths:
      - '.github/workflows/push.yml'
      - '.github/workflows/master.yml'
      - 'packages/**'
      - '.eslintrc.js'
      - '.prettierrc'
      - 'lerna.json'
      - 'package.json'
      - 'rollup.config.js'
      - 'yarn.lock'
      - 'docs-gen/**'
      - 'docs/**'
    branches:
      - master

jobs:
  latest-tag-sha:
    runs-on: ubuntu-20.04
    outputs:
      sha: ${{ steps.get-tag.outputs.sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: git-log
        run: git log HEAD~30..HEAD
      - id: get-tag-test
        run: echo "$SHA $(git rev-list -n 1 $(git tag --contains $SHA))"
        env:
          SHA: ${{ github.sha }}
      - id: get-tag
        run: echo "::set-output name=sha::$(git rev-list -n 1 $(git tag --contains $SHA))"
        env:
          SHA: ${{ github.sha }}
      - id: get-tag-out
        run: echo "$OUT"
        env:
          OUT: ${{ steps.get-tag.outputs.sha }}

  docker-image-dev:
    name: Release :dev image
    runs-on: ubuntu-20.04
    needs: latest-tag-sha
    if: (needs['latest-tag-sha'].outputs.sha != github.sha)
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.6.3
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./packages/cubejs-docker/dev.Dockerfile
          platforms: linux/amd64
          push: true
          tags: cubejs/cube:dev
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: cubejs/cube
          readme-filepath: ./packages/cubejs-docker/README.md

  integration-cloud:
    needs: [ latest-tag-sha ]
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    if: (needs['latest-tag-sha'].outputs.sha != github.sha)

    strategy:
      matrix:
        node-version: [ 14.x ]
        db: [ 'athena', 'bigquery' ]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-07-04
          override: true
          components: rustfmt
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore lerna
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            rust/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-workspace-main-${{ matrix.node-version }}-
      - name: Set Yarn version
        run: yarn policies set-version v1.22.5
      - name: Yarn install
        run: CUBESTORE_SKIP_POST_INSTALL=true yarn install --frozen-lockfile
      - name: Lerna tsc
        run: yarn tsc
      - name: Run Integration tests for ${{ matrix.db }} matrix
        timeout-minutes: 30
        env:
          CUBEJS_DB_BQ_CREDENTIALS: ${{ secrets.CUBEJS_DB_BQ_CREDENTIALS }}
          CUBEJS_AWS_KEY: ${{ secrets.CUBEJS_AWS_KEY }}
          CUBEJS_AWS_SECRET: ${{ secrets.CUBEJS_AWS_SECRET }}
        run: ./.github/actions/integration/${{ matrix.db }}.sh
